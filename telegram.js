// telegram.js
import fetch from "node-fetch";
import { Telegraf } from "telegraf";
import FormData from "form-data";
import { debug } from "./utils.js";

const TG_BOT_TOKEN = process.env.TG_BOT_TOKEN;
const TG_CHAT_ID = process.env.TG_CHAT_ID;

// =============================
// Telegram Bot –∏ —É—Ç–∏–ª–∏—Ç—ã
// =============================

let bot = null;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
 */
export async function initTelegram() {
  if (!TG_BOT_TOKEN) {
    console.error("‚ùå TG_BOT_TOKEN –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
    return;
  }

  bot = new Telegraf(TG_BOT_TOKEN);

  // üéß –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∏ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on(["voice", "audio"], async (ctx) => {
    try {
      const fileId = ctx.message.voice?.file_id || ctx.message.audio?.file_id;
      const sender = ctx.message.from.username || ctx.message.from.first_name;

      console.log(`üéß –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª –æ—Ç ${sender}, file_id=${fileId}`);

      const fileInfoRes = await fetch(
        `https://api.telegram.org/bot${TG_BOT_TOKEN}/getFile?file_id=${fileId}`
      );
      const fileInfo = await fileInfoRes.json();
      const filePath = fileInfo.result.file_path;

      const telegramFileUrl = `https://api.telegram.org/file/bot${TG_BOT_TOKEN}/${filePath}`;
      console.log("‚úÖ Telegram CDN link:", telegramFileUrl);

      await ctx.reply(`‚úÖ –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω!\nCDN: ${telegramFileUrl}`);
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ:", err.message);
      await ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞.");
    }
  });

  // –ü—Ä–æ—Å—Ç–µ–π—à–∏–µ –∫–æ–º–∞–Ω–¥—ã
  bot.command("start", (ctx) =>
    ctx.reply("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∞—É–¥–∏–æ/–≤–æ–π—Å—ã!")
  );
  bot.command("ping", (ctx) => ctx.reply("üèì Pong!"));

  await bot.launch();
  console.log("ü§ñ Telegram bot listener initialized...");
  console.log("üöÄ Telegram bot –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –Ω–æ–≤—ã–µ –∞—É–¥–∏–æ/–≤–æ–π—Å—ã...");
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 */
export async function sendTGMessage(text) {
  if (!TG_BOT_TOKEN || !TG_CHAT_ID) {
    console.warn("‚ö†Ô∏è TG_BOT_TOKEN –∏–ª–∏ TG_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã");
    return;
  }

  try {
    const res = await fetch(
      `https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage`,
      {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: TG_CHAT_ID,
          text,
          parse_mode: "HTML",
        }),
      }
    );

    const data = await res.json();
    if (!data.ok) throw new Error(data.description);
    debug("üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
  } catch (e) {
    console.error("‚ùå sendTGMessage error:", e.message);
  }
}

// =============================
// Telegram Proxy –¥–ª—è –∞—É–¥–∏–æ
// =============================

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç mp3 –≤ Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç CDN —Å—Å—ã–ª–∫—É
 * (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ VPN-–±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ MegaPBX)
 */
export async function uploadToTelegramAndGetUrl(fileUrl) {
  try {
    if (!TG_BOT_TOKEN || !TG_CHAT_ID) {
      console.warn("‚ö†Ô∏è Telegram env vars not set");
      return null;
    }

    console.log("üéß Uploading audio to Telegram via bot...");

    // 1Ô∏è‚É£ –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å mp3 (Railway –º–æ–∂–µ—Ç –Ω–µ –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø–∞ –∫ MegaPBX)
    const res = await fetch(fileUrl, { timeout: 15000 });
    if (!res.ok) throw new Error(`Cannot fetch source audio: ${res.status}`);
    const buffer = await res.arrayBuffer();

    // 2Ô∏è‚É£ –ó–∞–ª–∏–≤–∞–µ–º –≤ Telegram
    const form = new FormData();
    form.append("chat_id", TG_CHAT_ID);
    form.append("audio", Buffer.from(buffer), "call.mp3");

    const sendRes = await fetch(`https://api.telegram.org/bot${TG_BOT_TOKEN}/sendAudio`, {
      method: "POST",
      body: form,
    });

    const data = await sendRes.json();
    if (!data.ok) throw new Error("Telegram upload failed: " + JSON.stringify(data));

    const fileId = data.result.audio.file_id;

    // 3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º CDN-—Å—Å—ã–ª–∫—É
    const fileInfoRes = await fetch(
      `https://api.telegram.org/bot${TG_BOT_TOKEN}/getFile?file_id=${fileId}`
    );
    const fileInfo = await fileInfoRes.json();
    const filePath = fileInfo.result.file_path;

    const telegramFileUrl = `https://api.telegram.org/file/bot${TG_BOT_TOKEN}/${filePath}`;
    console.log("‚úÖ Telegram CDN link:", telegramFileUrl);

    return telegramFileUrl;
  } catch (e) {
    console.error("‚ùå uploadToTelegramAndGetUrl:", e.message);
    return null;
  }
}

// =============================
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ DEBUG)
// =============================
if (process.env.TG_BOT_TOKEN && process.env.TG_CHAT_ID && process.env.TG_DEBUG === "true") {
  initTelegram().catch((e) => console.error("‚ö†Ô∏è Telegram init error:", e.message));
}
