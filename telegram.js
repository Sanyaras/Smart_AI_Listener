// telegram.js
import { Telegraf } from "telegraf";
import { supabase } from "./supabaseStore.js";
import fetch from "node-fetch";
import { debug } from "./utils.js";

let bot = null;
let CHAT_ID = null;

// ============ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø TELEGRAM ============
export function initTelegramEnv(env) {
  const token = env.TG_BOT_TOKEN;
  CHAT_ID = env.TG_CHAT_ID;

  if (!token) {
    console.warn("‚ö†Ô∏è TG_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω, Telegram –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω");
    return;
  }

  bot = new Telegraf(token);
  debug("ü§ñ Telegram bot listener initialized...");

  bot.on(["voice", "audio"], async (ctx) => {
    try {
      const file = ctx.message.voice || ctx.message.audio;
      const fileId = file.file_id;
      const fileInfo = await ctx.telegram.getFile(fileId);
      const fileUrl = `https://api.telegram.org/file/bot${token}/${fileInfo.file_path}`;

      debug(`üéß –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª –∏–∑ Telegram: ${fileUrl}`);

      const note_id = `tg_${fileId}`;
      const created_at = new Date().toISOString();

      // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ call_records
      await supabase.from("call_records").upsert({
        note_id,
        contact_id: ctx.from.id,
        link: fileUrl,
        created_at,
        status: "new",
      });

      await ctx.reply("‚úÖ –ê—É–¥–∏–æ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –∞–Ω–∞–ª–∏–∑!");
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Telegram —Ñ–∞–π–ª–∞:", err);
      ctx.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ");
    }
  });

  bot.launch();
  debug("üöÄ Telegram bot –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –Ω–æ–≤—ã–µ –∞—É–¥–∏–æ/–≤–æ–π—Å—ã...");
}

// ============ –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô ============
export async function sendTGMessage(text) {
  try {
    if (!bot || !CHAT_ID) {
      console.warn("‚ö†Ô∏è Telegram bot –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
      return;
    }
    await bot.telegram.sendMessage(CHAT_ID, text, { parse_mode: "HTML" });
    debug("üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è:", err);
  }
}
