// telegram.js
import fetch from "node-fetch";
import { Telegraf } from "telegraf";
import { debug, safeStr } from "./utils.js";

let bot = null;
let TELEGRAM_CHAT_ID = null;
let TELEGRAM_BOT_TOKEN = null;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è Telegram
 */
export function initTelegramEnv(env = process.env) {
  TELEGRAM_BOT_TOKEN = env.TELEGRAM_BOT_TOKEN || env.TG_BOT_TOKEN;
  TELEGRAM_CHAT_ID = env.TELEGRAM_CHAT_ID;

  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error("‚ö†Ô∏è TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã");
    return;
  }

  try {
    bot = new Telegraf(TELEGRAM_BOT_TOKEN);
    console.log("ü§ñ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (relay mode)");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegraf:", err);
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 */
export async function sendTGMessage(text) {
  if (!bot || !TELEGRAM_CHAT_ID) return;
  try {
    await bot.telegram.sendMessage(TELEGRAM_CHAT_ID, text, {
      parse_mode: "HTML",
      disable_web_page_preview: true,
    });
    debug("üì© –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
  } catch (e) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è:", safeStr(e));
  }
}

/**
 * –ü–µ—Ä–µ–¥–∞—á–∞ –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ Telegram ‚Äî –ø—Ä–æ–∫—Å–∏-–∑–∞–≥—Ä—É–∑–∫–∞
 * Telegram —Å–∫–∞—á–∏–≤–∞–µ—Ç mp3 —Å MegaPBX –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç CDN-—Å—Å—ã–ª–∫—É
 */
export async function tgRelayAudio(url, caption = "Call recording") {
  if (!bot || !TELEGRAM_CHAT_ID) {
    console.error("‚ö†Ô∏è Telegram –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω ‚Äî relay –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ");
    return null;
  }

  try {
    console.log(`üéß Relay: —Å–∫–∞—á–∏–≤–∞–µ–º –∏ –∑–∞–ª–∏–≤–∞–µ–º –≤ Telegram -> ${url}`);

    const sent = await bot.telegram.sendAudio(TELEGRAM_CHAT_ID, { url }, { caption });

    if (!sent?.audio?.file_id) {
      console.warn("‚ö†Ô∏è Telegram relay –Ω–µ –≤–µ—Ä–Ω—É–ª file_id");
      return null;
    }

    const fileInfo = await bot.telegram.getFile(sent.audio.file_id);
    if (!fileInfo?.file_path) {
      console.warn("‚ö†Ô∏è Telegram relay –Ω–µ –≤–µ—Ä–Ω—É–ª file_path");
      return null;
    }

    const cdnUrl = `https://api.telegram.org/file/bot${TELEGRAM_BOT_TOKEN}/${fileInfo.file_path}`;
    console.log(`‚úÖ Telegram CDN link –≥–æ—Ç–æ–≤: ${cdnUrl}`);
    return cdnUrl;
  } catch (e) {
    console.error("‚ùå tgRelayAudio error:", safeStr(e));
    return null;
  }
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—ë—Ä—Ç–∫–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Amo –æ–±—Ä–∞–±–æ—Ç–∫–µ
 * (–ø—ã—Ç–∞–µ—Ç—Å—è relay —á–µ—Ä–µ–∑ Telegram, –µ—Å–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω)
 */
export async function uploadToTelegramAndGetUrl(mp3Url) {
  try {
    console.log("üéß Uploading audio to Telegram via relay...");
    const tgUrl = await tgRelayAudio(mp3Url, "üìû –ù–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫");
    if (!tgUrl) {
      console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å relay-—Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ Telegram");
      return null;
    }
    return tgUrl;
  } catch (err) {
    console.error("‚ùå uploadToTelegramAndGetUrl:", safeStr(err));
    return null;
  }
}

export { TELEGRAM_CHAT_ID };
