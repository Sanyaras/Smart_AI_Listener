// telegram.js
import fetch from "node-fetch";
import { Telegraf } from "telegraf";
import { insertCallRecord } from "./supabaseStore.js";
import { debug, safeStr } from "./utils.js";

const botToken = process.env.TG_BOT_TOKEN;
const chatId = process.env.TG_CHAT_ID;

if (!botToken) throw new Error("‚ùå Missing TG_BOT_TOKEN in environment variables");

export const bot = new Telegraf(botToken);

debug("ü§ñ Telegram bot listener initialized...");

// ==========================
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ –∏ –≤–æ–π—Å–æ–≤
// ==========================
bot.on(["audio", "voice"], async (ctx) => {
  try {
    const msg = ctx.message;
    const fileInfo = msg.audio || msg.voice;
    const file_id = fileInfo.file_id;
    const duration = fileInfo.duration || 0;
    const sender = msg.from?.username || msg.from?.first_name || "unknown";
    const created_at = new Date(msg.date * 1000).toISOString();

    // 1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º file_path
    const getFileRes = await fetch(
      `https://api.telegram.org/bot${botToken}/getFile?file_id=${file_id}`
    );
    const fileJson = await getFileRes.json();
    if (!fileJson.ok) throw new Error(`getFile failed: ${safeStr(fileJson)}`);

    // 2Ô∏è‚É£ –°—Ç—Ä–æ–∏–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É
    const file_path = fileJson.result.file_path;
    const fileUrl = `https://api.telegram.org/file/bot${botToken}/${file_path}`;
    debug(`üéß –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª –∏–∑ Telegram: ${fileUrl}`);

    // 3Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Supabase –∫–∞–∫ –∑–≤–æ–Ω–æ–∫
    const note_id = `tg_${msg.message_id}`;
    const contact_id = msg.from?.id || 0;

    const record = await insertCallRecord({
      note_id,
      contact_id,
      link: fileUrl,
      created_at,
    });

    if (record) {
      await ctx.reply(`‚úÖ –ê—É–¥–∏–æ –ø–æ–ª—É—á–µ–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ (${sender}, ${duration}s)`);
      debug(`üíæ call_record –¥–æ–±–∞–≤–ª–µ–Ω –≤ Supabase: ${note_id}`);
    } else {
      await ctx.reply(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É`);
    }
  } catch (e) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ:", safeStr(e));
    await ctx.reply("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞—É–¥–∏–æ üò¢");
  }
});

// ==========================
// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
// ==========================
bot.command("ping", async (ctx) => {
  await ctx.reply("üèì Bot online!");
});

bot.command("last", async (ctx) => {
  await ctx.reply("üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∞—É–¥–∏–æ-–∑–∞–ø–∏—Å–µ–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è...");
});

// ==========================
// –ó–∞–ø—É—Å–∫
// ==========================
export function startTelegramBot() {
  bot.launch();
  debug("üöÄ Telegram bot –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –Ω–æ–≤—ã–µ –∞—É–¥–∏–æ/–≤–æ–π—Å—ã...");
}
